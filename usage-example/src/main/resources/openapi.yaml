openapi: 3.0.3
info:
  title: Twitch Helix
  description: |
    The new Twitch API provides the tools and data used to develop integrations with Twitch.
    The data models and systems are designed to provide relevant data in an easy, consistent, and reliable way.

    Further information:
    - [Authorization](https://dev.twitch.tv/docs/authentication)
    - [Pagination](https://dev.twitch.tv/docs/api/guide#pagination)
    - [Rate Limits](https://dev.twitch.tv/docs/api/guide#rate-limits)
    - [Methods](https://dev.twitch.tv/docs/api/reference)
  termsOfService: https://www.twitch.tv/p/de-de/legal/terms-of-service/
  license:
    name: MIT
    url: https://github.com/twitch4j/twitch4j/blob/master/LICENSE
  contact:
    name: Discord Community
    url: https://discord.gg/FQ5vgW3
  version: 1.0.0
externalDocs:
  description: Official Documentation
  url: https://dev.twitch.tv/docs/api/
servers:
  - url: https://api.twitch.tv/helix
tags:
  - name: ads
    description: Advertisement
  - name: analytics
    description: Analytics
  - name: bits
    description: Bits
  - name: channel_points
    description: Channel Points
  - name: chat
    description: Chat
  - name: entitlements
    description: Entitlements
  - name: eventsub
    description: EventSub
  - name: extensions
    description: Extensions
  - name: games
    description: Game Endpoints
  - name: search
    description: Search
  - name: channels
    description: Channels
  - name: clips
    description: Clips
  - name: hypetrain
    description: HypeTrain
  - name: moderation
    description: Moderation
  - name: polls
    description: Polls
  - name: predictions
    description: Predictions
  - name: schedule
    description: Schedule
  - name: streams
    description: Streams
  - name: tags
    description: Tags
  - name: subscriptions
    description: Subscriptions
  - name: teams
    description: Teams
  - name: users
    description: Users
  - name: videos
    description: Videos
  - name: webhooks
    description: WebHooks
paths:
  # Advertisement
  /channels/commercial:
    post:
      tags:
        - ads
      summary: Start Commercial
      description: Starts a commercial on a specified channel.
      externalDocs:
        description: Find more information on the Twitch Developer Documentation
        url: https://dev.twitch.tv/docs/api/reference#start-commercial
      operationId: start-commercial
      security:
        - twitch_oauth2: ['channel:edit:commercial']
      parameters:
        - $ref: '#/components/parameters/tokenParam'
      requestBody:
        description: Request to start a commercial on a specified channel.
        required: true
        content:
          application/json:
            schema:
              title: StartCommercialRequest
              description: Request to start a commercial on a specified channel.
              type: object
              required:
                - broadcaster_id
                - length
              properties:
                broadcaster_id:
                  type: string
                  description: "ID of the channel requesting a commercial. Minimum: 1 Maximum: 1"
                  example: "41245072"
                length:
                  type: integer
                  description: "Desired length of the commercial in seconds. Valid options are 30, 60, 90, 120, 150, 180."
                  example: 60
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: CommercialList
                description: Holds Information about the scheduled commercial.
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      title: Commercial
                      description: Holds Information about the scheduled commercial.
                      type: object
                      required:
                        - length
                        - message
                        - retry_after
                      properties:
                        length:
                          type: integer
                          description: Length of the triggered commercial
                          example: 60
                        message:
                          type: string
                          description: Provides contextual information on why the request failed
                          example: ""
                        retry_after:
                          type: integer
                          description: Seconds until the next commercial can be served on this channel
                          example: 480
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/ToManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  # Analytics
  /analytics/extensions:
    get:
      tags:
        - analytics
      summary: Get Extension Analytics
      description: |-
        Gets a URL that Extension developers can use to download analytics reports (CSV files) for their Extensions. The URL is valid for 5 minutes.

        If you specify a future date, the response will be “Report Not Found For Date Range.” If you leave both started_at and ended_at blank, the API returns the most recent date of data.
      externalDocs:
        description: Find more information on the Twitch Developer Documentation
        url: https://dev.twitch.tv/docs/api/reference#get-extension-analytics
      operationId: get-extension-analytics
      security:
        - twitch_oauth2: [ 'analytics:read:extensions' ]
      parameters:
        - $ref: '#/components/parameters/tokenParam'
        - name: started_at
          in: query
          description: |-
            Starting date/time for returned reports, in RFC3339 format with the hours, minutes, and seconds zeroed out and the UTC timezone: YYYY-MM-DDT00:00:00Z. This must be on or after January 31, 2018.

            If this is provided, ended_at also must be specified. If started_at is earlier than the default start date, the default date is used.  The file contains one row of data per day.
          required: true
          schema:
            type: string
        - name: ended_at
          in: query
          description: |-
            Ending date/time for returned reports, in RFC3339 format with the hours, minutes, and seconds zeroed out and the UTC timezone: YYYY-MM-DDT00:00:00Z. The report covers the entire ending date; e.g., if 2018-05-01T00:00:00Z is specified, the report covers up to 2018-05-01T23:59:59Z.

            If this is provided, started_at also must be specified. If ended_at is later than the default end date, the default date is used. Default: 1-2 days before the request was issued (depending on report availability).
          required: true
          schema:
            type: string
        - name: extension_id
          in: query
          description: Client ID value assigned to the extension when it is created. If this is specified, the returned URL points to an analytics report for just the specified extension. If this is not specified, the response includes multiple URLs (paginated), pointing to separate analytics reports for each of the authenticated user’s Extensions.
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: "Type of analytics report that is returned. Currently, this field has no affect on the response as there is only one report type. If additional types were added, using this field would return only the URL for the specified report. Limit: 1. Valid values: overview_v2."
          required: true
          schema:
            type: string
            default: "overview_v2"
        - $ref: '#/components/parameters/afterParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: A list of extension analytics
          content:
            application/json:
              schema:
                title: ExtensionAnalyticsList
                description: "A list of extension analytics records"
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: ExtensionAnalytics
                      description: "Holds information about a extension analytics report"
                      type: object
                      properties:
                        game_id:
                          type: string
                          description: "ID of the game whose analytics data is being provided."
                        URL:
                          type: string
                          description: "URL to the downloadable CSV file containing analytics data. Valid for 5 minutes."
                        type:
                          type: string
                          description: "Type of report."
                        date_range:
                          $ref: '#/components/schemas/AnalyticsDateRange'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/ToManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /analytics/games:
    get:
      tags:
        - analytics
      summary: Get Game Analytics
      description: |-
        Gets a URL that game developers can use to download analytics reports (CSV files) for their games. The URL is valid for 5 minutes. For detail about analytics and the fields returned, see the Insights & Analytics guide.

        The response has a JSON payload with a data field containing an array of games information elements and can contain a pagination field containing information required to query for more streams.

        If you specify a future date, the response will be “Report Not Found For Date Range.” If you leave both started_at and ended_at blank, the API returns the most recent date of data.
      externalDocs:
        description: Find more information on the Twitch Developer Documentation
        url: https://dev.twitch.tv/docs/api/reference#get-game-analytics
      operationId: get-game-analytics
      security:
        - twitch_oauth2: [ 'analytics:read:games' ]
      parameters:
        - $ref: '#/components/parameters/tokenParam'
        - name: started_at
          in: query
          description: |-
            Starting date/time for returned reports, in RFC3339 format with the hours, minutes, and seconds zeroed out and the UTC timezone: YYYY-MM-DDT00:00:00Z. This must be on or after January 31, 2018.

            If this is provided, ended_at also must be specified. If started_at is earlier than the default start date, the default date is used. The file contains one row of data per day.
          required: true
          schema:
            type: string
        - name: ended_at
          in: query
          description: |-
            Ending date/time for returned reports, in RFC3339 format with the hours, minutes, and seconds zeroed out and the UTC timezone: YYYY-MM-DDT00:00:00Z. The report covers the entire ending date; e.g., if 2018-05-01T00:00:00Z is specified, the report covers up to 2018-05-01T23:59:59Z.

            If this is provided, started_at also must be specified. If ended_at is later than the default end date, the default date is used. Default: 1-2 days before the request was issued (depending on report availability).
          required: true
          schema:
            type: string
        - name: game_id
          in: query
          description: |-
            Game ID. If this is specified, the returned URL points to an analytics report for just the specified game. If this is not specified, the response includes multiple URLs (paginated), pointing to separate analytics reports for each of the authenticated user’s games.
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: "Type of analytics report that is returned. Currently, this field has no affect on the response as there is only one report type. If additional types were added, using this field would return only the URL for the specified report. Limit: 1. Valid values: overview_v2."
          required: true
          schema:
            type: string
            default: "overview_v2"
        - $ref: '#/components/parameters/afterParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: A list of game analytics
          content:
            application/json:
              schema:
                title: GameAnalyticsList
                description: "A list of game analytics records"
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: GameAnalytics
                      description: "Holds information about a game analytics report"
                      type: object
                      properties:
                        extension_id:
                          type: string
                          description: "ID of the extension whose analytics data is being provided."
                        URL:
                          type: string
                          description: "URL to the downloadable CSV file containing analytics data. Valid for 5 minutes."
                        type:
                          type: string
                          description: "Type of report."
                        date_range:
                          $ref: '#/components/schemas/AnalyticsDateRange'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/ToManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  # Bits
#  /bits/leaderboard:
#    get:
#      tags:
#        - bits
#      summary: Get Bits Leaderboard
#      description: Gets a ranked list of Bits leaderboard information for an authorized broadcaster.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-bits-leaderboard
#      operationId: get-bits-leaderboard
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /bits/cheermotes:
#    get:
#      tags:
#        - bits
#      summary: Get Cheermotes
#      description: "Retrieves the list of available Cheermotes, animated emotes to which viewers can assign Bits, to cheer in chat. Cheermotes returned are available throughout Twitch, in all Bits-enabled channels."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-cheermotes
#      operationId: get-cheermotes
#      parameters:
#        - name: broadcaster_id
#          in: query
#          description: ID for the broadcaster who might own specialized Cheermotes.
#          schema:
#            type: string
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /extensions/transactions:
#    get:
#      tags:
#        - bits
#      summary: Get Extension Transactions
#      description: Gets the list of Extension transactions for a given Extension. This allows Extension back-end servers to fetch a list of transactions that have occurred for their Extension across all of Twitch. A transaction is a record of a user exchanging Bits for an in-Extension digital good.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-extension-transactions
#      operationId: get-extension-transactions
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Channels
#  /channels:
#    patch:
#      tags:
#        - channels
#      summary: Modify Channel Information
#      description: Modifies channel information for users.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#modify-channel-information
#      operationId: modify-channel-information
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /channels/editors:
#    get:
#      tags:
#        - channels
#      summary: Get Channel Editors
#      description: Gets a list of users who have editor permissions for a specific channel.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-channel-editors
#      operationId: get-channel-editors
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Channel Points
#  /channel_points/custom_rewards:
#    patch:
#      tags:
#        - channel_points
#      summary: Update Custom Reward
#      description: Updates a Custom Reward created on a channel. The Custom Reward specified by id must have been created by the client_id attached to the user OAuth token.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#update-custom-reward
#      operationId: update-custom-reward
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /channel_points/custom_rewards/redemptions:
#    patch:
#      tags:
#        - channel_points
#      summary: Update Redemption Status
#      description: Updates the status of Custom Reward Redemption objects on a channel that are in the UNFULFILLED status. The Custom Reward Redemption specified by id must be for a Custom Reward created by the client_id attached to the user OAuth token.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#update-redemption-status
#      operationId: update-redemption-status
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Chat
#  /chat/emotes:
#    get:
#      tags:
#        - chat
#      summary: Get Channel Emotes
#      description: "Gets all emotes that the specified Twitch channel created. Broadcasters create these custom emotes for users who subscribe to or follow the channel, or cheer Bits in the channel’s chat window. For information about the custom emotes, see subscriber emotes, Bits tier emotes, and follower emotes. NOTE: With the exception of custom follower emotes, users may use custom emotes in any Twitch chat. Learn More"
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-channel-emotes
#      operationId: get-channel-emotes
#      parameters:
#        - name: broadcaster_id
#          in: query
#          description: An ID that identifies the broadcaster to get the emotes from.
#          required: true
#          schema:
#            type: string
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /chat/emotes/global:
#    get:
#      tags:
#        - chat
#      summary: Get Global Emotes
#      description: Gets all global emotes. Global emotes are Twitch-created emoticons that users can use in any Twitch chat. Learn More
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-global-emotes
#      operationId: get-global-emotes
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /chat/emotes/set:
#    get:
#      tags:
#        - chat
#      summary: Get Emote Sets
#      description: "Gets emotes for one or more specified emote sets. An emote set groups emotes that have a similar context. For example, Twitch places all the subscriber emotes that a broadcaster uploads for their channel in the same emote set. Learn More"
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-emote-sets
#      operationId: get-emote-sets
#      parameters:
#        - name: emote_set_id
#          in: query
#          description: "An ID that identifies the emote set. Include the parameter for each emote set you want to get. For example, emote_set_id=1234&emote_set_id=5678. You may specify a maximum of 25 IDs."
#          required: true
#          schema:
#            type: string
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /chat/badges:
#    get:
#      tags:
#        - chat
#      summary: Get Channel Chat Badges
#      description: Gets a list of custom chat badges that can be used in chat for the specified channel. This includes subscriber badges and Bit badges.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-channel-chat-badges
#      operationId: get-channel-chat-badges
#      parameters:
#        - name: broadcaster_id
#          in: query
#          description: "The broadcaster whose chat badges are being requested. Provided broadcaster_id must match the user_id in the user OAuth token. Maximum: 1"
#          required: true
#          schema:
#            type: string
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /chat/badges/global:
#    get:
#      tags:
#        - chat
#      summary: Get Global Chat Badges
#      description: Gets a list of chat badges that can be used in chat for any channel.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-global-chat-badges
#      operationId: get-global-chat-badges
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Clips
#  /clips:
#    get:
#      tags:
#        - clips
#      summary: Get Clips
#      description: "Gets clip information by clip ID (one or more), broadcaster ID (one only), or game ID (one only). Note: The clips service returns a maximum of 1000 clips. The response has a JSON payload with a data field containing an array of clip information elements and a pagination field containing information required to query for more streams."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-clips
#      operationId: get-clips
#      parameters:
#        - name: broadcaster_id
#          in: query
#          description: "ID of the broadcaster for whom clips are returned. The number of clips returned is determined by the first query-string parameter (default: 20). Results are ordered by view count."
#          required: true
#          schema:
#            type: string
#        - name: game_id
#          in: query
#          description: "ID of the game for which clips are returned. The number of clips returned is determined by the first query-string parameter (default: 20). Results are ordered by view count."
#          required: true
#          schema:
#            type: string
#        - name: id
#          in: query
#          description: "ID of the clip being queried. Limit: 100."
#          required: true
#          schema:
#            type: string
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Entitlements
#  /entitlements/codes:
#    post:
#      tags:
#        - entitlements
#      summary: Redeem Code
#      description: "Redeems one or more provided codes to the authenticated Twitch user. This API requires that the caller is an authenticated Twitch user. This API requires that the caller is an authenticated Twitch user. The API is throttled to one request per second per authenticated user. Codes are redeemable alphanumeric strings tied only to the bits product. This third-party API allows other parties to redeem codes on behalf of users. Third-party app and extension developers can use the API to provide rewards of bits from within their games. We provide sets of codes to the third party as part of a contract agreement. The third-party program then calls this API to credit the Twitch user by submitting any specific codes. This means that a bits reward can be applied without the user having to follow any manual steps. All codes are single-use. Once a code has been redeemed, via either this API or the site page, the code is no longer valid for any further use."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#redeem-code
#      operationId: redeem-code
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /entitlements/drops:
#    patch:
#      tags:
#        - entitlements
#      summary: Update Drops Entitlements
#      description: "Updates the fulfillment status on a set of Drops entitlements, specified by their entitlement IDs."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#update-drops-entitlements
#      operationId: update-drops-entitlements
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # EventSub
#  /eventsub/subscriptions:
#    get:
#      tags:
#        - eventsub
#      summary: Get EventSub Subscriptions
#      description: Gets a list of your EventSub subscriptions. The list is paginated and ordered by the oldest subscription first.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-eventsub-subscriptions
#      operationId: get-eventsub-subscriptions
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Extensions
#  /extensions/configurations:
#    put:
#      tags:
#        - extensions
#      summary: Set Extension Configuration Segment
#      description: Sets a single configuration segment of any type. The segment type is specified as a body parameter. Each segment is limited to 5 KB and can be set at most 20 times per minute. Updates to this data are not delivered to Extensions that have already been rendered.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#set-extension-configuration-segment
#      operationId: set-extension-configuration-segment
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /extensions/required_configuration:
#    put:
#      tags:
#        - extensions
#      summary: Set Extension Required Configuration
#      description: "Enable activation of a specified Extension, after any required broadcaster configuration is correct. The Extension is identified by a client ID value assigned to the Extension when it is created. This is for Extensions that require broadcaster configuration before activation. Use this if, in Extension Capabilities, you select Custom/My Own Service. You enforce required broadcaster configuration with a required_configuration string in the Extension manifest. The contents of this string can be whatever you want. Once your EBS determines that the Extension is correctly configured on a channel, use this endpoint to provide that same configuration string, which enables activation on the channel. The endpoint URL includes the channel ID of the page where the Extension is iframe embedded. If a future version of the Extension requires a different configuration, change the required_configuration string in your manifest. When the new version is released, broadcasters will be required to re-configure that new version."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#set-extension-required-configuration
#      operationId: set-extension-required-configuration
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /extensions/pubsub:
#    post:
#      tags:
#        - extensions
#      summary: Send Extension PubSub Message
#      description: Twitch provides a publish-subscribe system for your EBS to communicate with both the broadcaster and viewers. Calling this endpoint forwards your message using the same mechanism as the send JavaScript helper function. A message can be sent to either a specified channel or globally (all channels on which your extension is active). Extension PubSub has a rate limit of 100 requests per minute for a combination of Extension client ID and broadcaster ID.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#send-extension-pubsub-message
#      operationId: send-extension-pubsub-message
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /extensions/live:
#    get:
#      tags:
#        - extensions
#      summary: Get Live Channels
#      description: "Returns one page of live channels that have installed or activated a specific Extension, identified by a client ID value assigned to the Extension when it is created. A channel that recently went live may take a few minutes to appear in this list, and a channel may continue to appear on this list for a few minutes after it stops broadcasting."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-live-channels
#      operationId: get-live-channels
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /extensions/jwt/secrets:
#    post:
#      tags:
#        - extensions
#      summary: Create Extension Secret
#      description: "Creates a JWT signing secret for a specific Extension. Also rotates any current secrets out of service, with enough time for instances of the Extension to gracefully switch over to the new secret. Use this function only when you are ready to install the new secret it returns."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#create-extension-secret
#      operationId: create-extension-secret
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /extensions/chat:
#    post:
#      tags:
#        - extensions
#      summary: Send Extension Chat Message
#      description: "Sends a specified chat message to a specified channel. The message will appear in the channel’s chat as a normal message. The \"username” of the message is the Extension name. There is a limit of 12 messages per minute, per channel. Extension chat messages use the same rate-limiting functionality as the Twitch API (see Rate Limits)."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#send-extension-chat-message
#      operationId: send-extension-chat-message
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /extensions:
#    get:
#      tags:
#        - extensions
#      summary: Get Extensions
#      description: Gets information about your Extensions; either the current version or a specified version.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-extensions
#      operationId: get-extensions
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /extensions/released:
#    get:
#      tags:
#        - extensions
#      summary: Get Released Extensions
#      description: Gets information about a released Extension; either the current version or a specified version.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-released-extensions
#      operationId: get-released-extensions
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /bits/extensions:
#    put:
#      tags:
#        - extensions
#      summary: Update Extension Bits Product
#      description: Add or update a Bits products that belongs to an Extension.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#update-extension-bits-product
#      operationId: update-extension-bits-product
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Games
  /games:
    get:
      tags:
        - games
      summary: Gets game information by game ID or name.
      description: Gets game information by game ID or name. The response has a JSON payload with a data field containing an array of games elements.
      operationId: get-games
      externalDocs:
        description: Find more information on the Twitch Developer Documentation
        url: https://dev.twitch.tv/docs/api/reference#get-games
      parameters:
        - $ref: '#/components/parameters/tokenParam'
        - in: query
          name: id
          description: 'Game ID. At most 100 id values can be specified.'
          schema:
            type: array
            items:
              type: integer
            minItems: 0
            example:
              - 19999
          examples:
            oneId:
              summary: Example with a single game
              value: [5]
            multipleIds:
              summary: Example with multiple games
              value: [1, 5, 7]
        - in: query
          name: name
          description: 'Game name. The name must be an exact match. For instance, "Pokemon" will not return a list of Pokemon games; instead, query the specific Pokemon game(s) in which you are interested. At most 100 name values can be specified.'
          schema:
            type: array
            items:
              type: string
            minItems: 0
            example:
              - Overwatch
          examples:
            oneId:
              summary: Example with a single game
              value: ["Overwatch"]
            multipleIds:
              summary: Example with multiple games
              value: ["Overwatch", "CounterStrike: Global Offensive"]
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                title: GameList
                description: Holds Games returned based on the search parameters.
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Game'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/ToManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /games/top:
    get:
      tags:
        - games
      summary: Gets games sorted by number of current viewers on Twitch, most popular first.
      description: "Gets games sorted by number of current viewers on Twitch, most popular first. The response has a JSON payload with a data field containing an array of games information elements and a pagination field containing information required to query for more streams."
      externalDocs:
        description: Find more information on the Twitch Developer Documentation
        url: https://dev.twitch.tv/docs/api/reference#get-top-games
      operationId: get-top-games
      parameters:
        - $ref: '#/components/parameters/tokenParam'
        - $ref: '#/components/parameters/afterParam'
        - $ref: '#/components/parameters/beforeParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: A list of games
          content:
            application/json:
              schema:
                title: TopGameList
                description: Holds Games sorted by number of current viewers on Twitch, most popular first.
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Game'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/ToManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  # Goals
#  /goals:
#    get:
#      tags:
#        - goals
#      summary: Get Creator Goals
#      description: Gets the broadcaster’s list of active goals. Use this to get the current progress of each goal.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-creator-goals
#      operationId: get-creator-goals
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Search
#  /search/categories:
#    get:
#      tags:
#        - search
#      summary: Search Categories
#      description: Returns a list of games or categories that match the query via name either entirely or partially.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#search-categories
#      operationId: search-categories
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /search/channels:
#    get:
#      tags:
#        - search
#      summary: Search Channels
#      description: "Returns a list of channels (users who have streamed within the past 6 months) that match the query via channel name or description either entirely or partially. Results include both live and offline channels. Online channels will have additional metadata (e.g. started_at, tag_ids)."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#search-channels
#      operationId: search-channels
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Channels
  # Clips
  # HypeTrain
#  /hypetrain/events:
#    get:
#      tags:
#        - hypetrain
#      summary: Get Hype Train Events
#      description: "Gets the information of the most recent Hype Train of the given channel ID. When there is currently an active Hype Train, it returns information about that Hype Train. When there is currently no active Hype Train, it returns information about the most recent Hype Train. After 5 days, if no Hype Train has been active, the endpoint will return an empty response."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-hype-train-events
#      operationId: get-hype-train-events
#      parameters:
#        - name: broadcaster_id
#          in: query
#          description: User ID of the broadcaster. Must match the User ID in the Bearer token if User Token is used.
#          required: true
#          schema:
#            type: string
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Moderation
#  /moderation/enforcements/status:
#    post:
#      tags:
#        - moderation
#      summary: Check AutoMod Status
#      description: "Determines whether a string message meets the channel’s AutoMod requirements. AutoMod is a moderation tool that blocks inappropriate or harassing chat with powerful moderator control. AutoMod detects misspellings and evasive language automatically. AutoMod uses machine learning and natural language processing algorithms to hold risky messages from chat so they can be reviewed by a channel moderator before appearing to other viewers in the chat. Moderators can approve or deny any message caught by AutoMod. For more information about AutoMod, see How to Use AutoMod."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#check-automod-status
#      operationId: check-automod-status
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /moderation/automod/message:
#    post:
#      tags:
#        - moderation
#      summary: Manage Held AutoMod Messages
#      description: "Allow or deny a message that was held for review by AutoMod. In order to retrieve messages held for review, use the chat_moderator_actions topic via PubSub. For more information about AutoMod, see How to Use AutoMod."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#manage-held-automod-messages
#      operationId: manage-held-automod-messages
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /moderation/banned/events:
#    get:
#      tags:
#        - moderation
#      summary: Get Banned Events
#      description: Returns all user ban and un-ban events for a channel.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-banned-events
#      operationId: get-banned-events
#      parameters:
#        - name: broadcaster_id
#          in: query
#          description: Provided broadcaster_id must match the user_id in the OAuth token.
#          required: true
#          schema:
#            type: string
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /moderation/banned:
#    get:
#      tags:
#        - moderation
#      summary: Get Banned Users
#      description: Returns all banned and timed-out users for a channel.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-banned-users
#      operationId: get-banned-users
#      parameters:
#      - name: broadcaster_id
#        in: query
#        description: Provided broadcaster_id must match the user_id in the OAuth token.
#        required: true
#        schema:
#          type: string
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /moderation/moderators:
#    get:
#      tags:
#        - moderation
#      summary: Get Moderators
#      description: "Returns all moderators in a channel. Note: This endpoint does not return the broadcaster in the response, as broadcasters are channel owners and have all permissions of moderators implicitly."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-moderators
#      operationId: get-moderators
#      parameters:
#        - name: broadcaster_id
#          in: query
#          description: "Provided broadcaster_id must match the user_id in the auth token. Maximum: 1"
#          required: true
#          schema:
#            type: string
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /moderation/moderators/events:
#    get:
#      tags:
#        - moderation
#      summary: Get Moderator Events
#      description: Returns a list of moderators or users added and removed as moderators from a channel.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-moderator-events
#      operationId: get-moderator-events
#      parameters:
#        - name: broadcaster_id
#          in: query
#          description: "Provided broadcaster_id must match the user_id in the auth token. Maximum: 1"
#          required: true
#          schema:
#            type: string
#        - name: user_id
#          in: query
#          description: "Filters the results and only returns a status object for users who have been added or removed as moderators in this channel and have a matching user_id. Format: Repeated Query Parameter, e.g. /moderation/moderators/events?broadcaster_id=1&user_id=2&user_id=3 Maximum: 100"
#          required: false
#          schema:
#            type: string
#        - name: after
#          in: query
#          description: "Cursor for forward pagination: tells the server where to start fetching the next set of results in a multi-page response. This applies only to queries without user_id. If a user_id is specified, it supersedes any cursor/offset combinations. The cursor value specified here is from the pagination response field of a prior query."
#          required: false
#          schema:
#            type: string
#        - name: first
#          in: query
#          description: "Maximum number of objects to return. Maximum: 100. Default: 20."
#          required: false
#          schema:
#            type: string
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Polls
#  /polls:
#    patch:
#      tags:
#        - polls
#      summary: End Poll
#      description: End a poll that is currently active.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#end-poll
#      operationId: end-poll
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Predictions
#  /predictions:
#    patch:
#      tags:
#        - predictions
#      summary: End Prediction
#      description: "Lock, resolve, or cancel a Channel Points Prediction. Active Predictions can be updated to be \"locked,” \"resolved,” or \"canceled.” Locked Predictions can be updated to be \"resolved” or \"canceled.”"
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#end-prediction
#      operationId: end-prediction
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Schedule
#  /schedule:
#    get:
#      tags:
#        - schedule
#      summary: Get Channel Stream Schedule
#      description: Gets all scheduled broadcasts or specific scheduled broadcasts from a channel’s stream schedule. Scheduled broadcasts are defined as "stream segments” in the API.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-channel-stream-schedule
#      operationId: get-channel-stream-schedule
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /schedule/icalendar:
#    get:
#      tags:
#        - schedule
#      summary: Get Channel iCalendar
#      description: Gets all scheduled broadcasts from a channel’s stream schedule as an iCalendar.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-channel-icalendar
#      operationId: get-channel-icalendar
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /schedule/settings:
#    patch:
#      tags:
#        - schedule
#      summary: Update Channel Stream Schedule
#      description: Update the settings for a channel’s stream schedule. This can be used for setting vacation details.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#update-channel-stream-schedule
#      operationId: update-channel-stream-schedule
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /schedule/segment:
#    delete:
#      tags:
#        - schedule
#      summary: Delete Channel Stream Schedule Segment
#      description: Delete a single scheduled broadcast or a recurring scheduled broadcast for a channel’s stream schedule.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#delete-channel-stream-schedule-segment
#      operationId: delete-channel-stream-schedule-segment
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Streams
#  /streams/key:
#    get:
#      tags:
#        - streams
#      summary: Get Stream Key
#      description: Gets the channel stream key for a user.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-stream-key
#      operationId: get-stream-key
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /streams:
#    get:
#      tags:
#        - streams
#      summary: Get Streams
#      description: "Gets information about active streams. Streams are returned sorted by number of current viewers, in descending order. Across multiple pages of results, there may be duplicate or missing streams, as viewers join and leave streams. The response has a JSON payload with a data field containing an array of stream information elements and a pagination field containing information required to query for more streams."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-streams
#      operationId: get-streams
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /streams/followed:
#    get:
#      tags:
#        - streams
#      summary: Get Followed Streams
#      description: "Gets information about active streams belonging to channels that the authenticated user follows. Streams are returned sorted by number of current viewers, in descending order. Across multiple pages of results, there may be duplicate or missing streams, as viewers join and leave streams."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-followed-streams
#      operationId: get-followed-streams
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /streams/markers:
#    get:
#      tags:
#        - streams
#      summary: Get Stream Markers
#      description: "Gets a list of markers for either a specified user’s most recent stream or a specified VOD/video (stream), ordered by recency. A marker is an arbitrary point in a stream that the broadcaster wants to mark; e.g., to easily return to later. The only markers returned are those created by the user identified by the Bearer token. The response has a JSON payload with a data field containing an array of marker information elements and a pagination field containing information required to query for more follow information."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-stream-markers
#      operationId: get-stream-markers
#      parameters:
#        - name: user_id
#          in: query
#          description: ID of the broadcaster from whose stream markers are returned.
#          required: true
#          schema:
#            type: string
#        - name: video_id
#          in: query
#          description: ID of the VOD/video whose stream markers are returned.
#          required: true
#          schema:
#            type: string
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Tags
#  /tags/streams:
#    get:
#      tags:
#        - tags
#      summary: Get All Stream Tags
#      description: "Gets the list of all stream tags that Twitch defines. You can also filter the list by one or more tag IDs. For an online list of the possible tags, see List of All Tags."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-all-stream-tags
#      operationId: get-all-stream-tags
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /streams/tags:
#    put:
#      tags:
#        - tags
#      summary: Replace Stream Tags
#      description: "Applies one or more tags to the specified channel, overwriting any existing tags. If the request does not specify tags, all existing tags are removed from the channel. NOTE: You may not specify automatic tags; the call will fail if you specify automatic tags. Automatic tags are tags that Twitch applies to the channel. For a list of automatic tags, see List of All Tags. To get the list programmatically, see Get All Stream Tags. Tags expire 72 hours after they are applied, unless the channel is live within that time period. If the channel is live within the 72-hour window, the 72-hour clock restarts when the channel goes offline. The expiration period is subject to change."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#replace-stream-tags
#      operationId: replace-stream-tags
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Subscriptions
#  /subscriptions:
#    get:
#      tags:
#        - subscriptions
#      summary: Get Broadcaster Subscriptions
#      description: Get all of the subscriptions for a specific broadcaster.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-broadcaster-subscriptions
#      operationId: get-broadcaster-subscriptions
#      parameters:
#        - name: broadcaster_id
#          in: query
#          description: User ID of the broadcaster. Must match the User ID in the Bearer token.
#          required: true
#          schema:
#            type: string
#        - name: user_id
#          in: query
#          description: Filters results to only include potential subscriptions made by the provided user IDs. Accepts up to 100 values.
#          required: false
#          schema:
#            type: string
#        - name: after
#          in: query
#          description: "Cursor for forward pagination: tells the server where to start fetching the next set of results in a multi-page response. This applies only to queries without user_id. If a user_id is specified, it supersedes any cursor/offset combinations. The cursor value specified here is from the pagination response field of a prior query."
#          required: false
#          schema:
#            type: string
#        - name: first
#          in: query
#          description: "Maximum number of objects to return. Maximum: 100. Default: 20."
#          required: false
#          schema:
#            type: string
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /subscriptions/user:
#    get:
#      tags:
#        - subscriptions
#      summary: Check User Subscription
#      description: Checks if a specific user (user_id) is subscribed to a specific channel (broadcaster_id).
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#check-user-subscription
#      operationId: check-user-subscription
#      parameters: [ ]
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Teams
#  /teams/channel:
#    get:
#      tags:
#        - teams
#      summary: Get Channel Teams
#      description: Retrieves a list of Twitch Teams of which the specified channel/broadcaster is a member.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-channel-teams
#      operationId: get-channel-teams
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /teams:
#    get:
#      tags:
#        - teams
#      summary: Get Teams
#      description: Gets information for a specific Twitch Team.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-teams
#      operationId: get-teams
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Users
#  /users:
#    get:
#      tags:
#        - users
#      summary: Get Users
#      description: "Gets information about one or more specified Twitch users. Users are identified by optional user IDs and/or login name. If neither a user ID nor a login name is specified, the user is looked up by Bearer token. The response has a JSON payload with a data field containing an array of user-information elements."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-users
#      operationId: get-users
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#    put:
#      tags:
#        - users
#      summary: Update User
#      description: "Updates the description of a user specified by the bearer token. Note that the description parameter is optional should other updatable parameters become available in the future. If the description parameter is not provided, no update will occur and the current user data is returned."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#update-user
#      operationId: update-user
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /users/follows:
#    get:
#      tags:
#        - users
#      summary: Get Users Follows
#      description: "Gets information on follow relationships between two Twitch users. This can return information like \"who is qotrok following,” \"who is following qotrok,” or \"is user X following user Y.” Information returned is sorted in order, most recent follow first. The response has a JSON payload with a data field containing an array of follow relationship elements and a pagination field containing information required to query for more follow information."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-users-follows
#      operationId: get-users-follows
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /users/blocks:
#    delete:
#      tags:
#        - users
#      summary: Unblock User
#      description: Unblocks the specified user on behalf of the authenticated user.
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#unblock-user
#      operationId: unblock-user
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /users/extensions/list:
#    get:
#      tags:
#        - users
#      summary: Get User Extensions
#      description: "Gets a list of all extensions (both active and inactive) for a specified user, identified by a Bearer token. The response has a JSON payload with a data field containing an array of user-information elements."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-user-extensions
#      operationId: get-user-extensions
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
#  /users/extensions:
#    put:
#      tags:
#        - users
#      summary: Update User Extensions
#      description: "Updates the activation state, extension ID, and/or version number of installed extensions for a specified user, identified by a Bearer token. If you try to activate a given extension under multiple extension types, the last write wins (and there is no guarantee of write order)."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#update-user-extensions
#      operationId: update-user-extensions
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # Videos
#  /videos:
#    delete:
#      tags:
#        - videos
#      summary: Delete Videos
#      description: "Deletes one or more videos. Videos are past broadcasts, Highlights, or uploads. Invalid Video IDs will be ignored (i.e. IDs provided that do not have a video associated with it). If the OAuth user token does not have permission to delete even one of the valid Video IDs, no videos will be deleted and the response will return a 401."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#delete-videos
#      operationId: delete-videos
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'
  # WebHooks
#  /webhooks/subscriptions:
#    get:
#      tags:
#        - webhooks
#      summary: Get Webhook Subscriptions
#      description: "Gets the Webhook subscriptions of an application identified by a Bearer token, in order of expiration. The response has a JSON payload with a data field containing an array of subscription elements and a pagination field containing information required to query for more subscriptions."
#      externalDocs:
#        description: Find more information on the Twitch Developer Documentation
#        url: https://dev.twitch.tv/docs/api/reference#get-webhook-subscriptions
#      operationId: get-webhook-subscriptions
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                title: CommercialData
#                description: Holds Information about the scheduled commercial.
#                type: object
#                properties: { }
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '401':
#          $ref: '#/components/responses/Unauthorized'
#        '429':
#          $ref: '#/components/responses/ToManyRequests'
#        '503':
#          $ref: '#/components/responses/ServiceUnavailable'

# Components
components:
  # Request Parameters
  parameters:
    tokenParam:
      in: header
      name: Authorization
      required: true
      schema:
        type: string
        example: "08152caf938e37c"
      description: "User Auth Token"
    afterParam:
      in: query
      name: after
      required: false
      schema:
        type: string
        example: ""
      description: "Cursor for forward pagination: tells the server where to start fetching the next set of results, in a multi-page response. The cursor value specified here is from the pagination response field of a prior query."
    beforeParam:
      in: query
      name: before
      required: false
      schema:
        type: string
        example: ""
      description: "Cursor for backward pagination: tells the server where to start fetching the next set of results, in a multi-page response. The cursor value specified here is from the pagination response field of a prior query."
    limitParam:
      in: query
      name: first
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
        example: 20
      description: "Maximum number of objects to return. Maximum: 100. Default: 20."
  # Response Schemas
  schemas:
    Pagination:
      description: The Twitch API supports cursor-based pagination for APIs that return lists of resources. This object holds the current curser.
      externalDocs:
        description: Find more information on the Twitch Developer Documentation
        url: https://dev.twitch.tv/docs/api/guide#pagination
      type: object
      properties:
        cursor:
          type: string
          example: eyJiIjpudWxsLCJhIjp7Ik9mZnNldCI6MjB9fQ==
    APIError:
      type: object
      properties:
        error:
          type: string
          example: Unauthorized
        status:
          type: integer
          example: 401
        message:
          type: string
          example: Must provide a valid Client-ID or OAuth token
    Game:
      description: Contains game information.
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Game ID
          example: 33214
        name:
          type: string
          description: Game name
          example: Fortnite
        box_art_url:
          type: string
          description: "Template URL for the game’s box art."
          example: https://static-cdn.jtvnw.net/ttv-boxart/Fortnite-{width}x{height}.jpg
    AnalyticsDateRange:
      description: Date-Range for this Analytics Report
      required:
        - started_at
        - ended_at
      type: object
      properties:
        started_at:
          type: string
          format: date
          example: "2018-01-01T00:00:00Z"
        ended_at:
          type: string
          format: date
          example: "2018-03-01T00:00:00Z"

  # Resposnes
  responses:
    BadRequest:
      description: "Bad Request: Query/Body Parameter missing or invalid."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError'
    Unauthorized:
      description: "Unauthenticated: Missing/invalid Token."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError'
    ToManyRequests:
      description: "HTTP 429 (Too Many Requests). You have exceeded the request limit, please check your rate-limiting."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError'
    ServiceUnavailable:
      description: "If you get an HTTP 503 (Service Unavailable) error, retry once."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError'

  # Authentication
  securitySchemes:
    clientId:
      type: apiKey
      name: Client-Id
      in: header
      description: The ClientId of the Twitch App.
    twitch_oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://id.twitch.tv/oauth2/token
          scopes:
            analytics:read:extensions: View analytics data for your extensions.
            user:edit: Manage a user object.
            user:read:email: Read authorized user's email address.
            clips:edit: Create and edit clips as a specific user.
            bits:read: View bits information for your channel.
            analytics:read:games: View analytics data for your games.
            user:edit:broadcast: Edit your channel's broadcast configuration, including extension configuration. (This scope implies user:read:broadcast capability.)
            user:read:broadcast: View your broadcasting configuration, including extension configurations.
            chat:read: View live Stream Chat and Rooms messages.
            chat:edit: Send live Stream Chat and Rooms messages.
            channel:moderate: Perform moderation actions in a channel.
            channel:read:subscriptions: Get a list of all subscribers to your channel and check if a user is subscribed to your channel.
            whispers:read: View your whisper messages.
            whispers:edit: Send whisper messages.
            moderation:read: View your channel's moderation data including Moderators, Bans, Timeouts and Automod settings
            channel:read:redemptions: View your channel points custom reward redemptions
            channel:edit:commercial: Run commercials on a channel.
            channel:read:hype_train: View hype train data for a given channel.
            channel:read:stream_key: Read authorized user's stream key.
            channel:manage:extensions: Manage your channel's extension configuration, including activating extensions.
            channel:manage:broadcast: Manage your channel's broadcast configuration, including updating channel configuration and managing stream markers and stream tags.
            user:edit:follows: Edit your follows.
            channel:manage:redemptions: Manage Channel Points custom rewards and their redemptions on a channel.
            channel:read:editors: View a list of users with the editor role for a channel.
            channel:manage:videos: Manage a channel's videos, including deleting videos.
            user:read:blocked_users: View the block list of a user.
            user:manage:blocked_users: Manage the block list of a user.
            user:read:subscriptions: Get the details of your subscription to a channel.
            user:read:follows: View the list of channels a user follows.
            channel:manage:polls: Manage a channel's polls.
            channel:manage:predictions: Manage of channel's Channel Points Predictions
            channel:read:polls: View a channel's polls.
            channel:read:predictions: View a channel's Channel Points Predictions.
            moderator:manage:automod: Manage messages held for review by AutoMod in channels where you are a moderator.
            channel:manage:schedule: Manage a channel's stream schedule.
            channel:read:goals: View Creator Goals for a channel.
        authorizationCode:
          authorizationUrl: https://id.twitch.tv/oauth2/authorize
          tokenUrl: https://id.twitch.tv/oauth2/token
          scopes:
            analytics:read:extensions: View analytics data for your extensions.
            user:edit: Manage a user object.
            user:read:email: Read authorized user's email address.
            clips:edit: Create and edit clips as a specific user.
            bits:read: View bits information for your channel.
            analytics:read:games: View analytics data for your games.
            user:edit:broadcast: Edit your channel's broadcast configuration, including extension configuration. (This scope implies user:read:broadcast capability.)
            user:read:broadcast: View your broadcasting configuration, including extension configurations.
            chat:read: View live Stream Chat and Rooms messages.
            chat:edit: Send live Stream Chat and Rooms messages.
            channel:moderate: Perform moderation actions in a channel.
            channel:read:subscriptions: Get a list of all subscribers to your channel and check if a user is subscribed to your channel.
            whispers:read: View your whisper messages.
            whispers:edit: Send whisper messages.
            moderation:read: View your channel's moderation data including Moderators, Bans, Timeouts and Automod settings
            channel:read:redemptions: View your channel points custom reward redemptions
            channel:edit:commercial: Run commercials on a channel.
            channel:read:hype_train: View hype train data for a given channel.
            channel:read:stream_key: Read authorized user's stream key.
            channel:manage:extensions: Manage your channel's extension configuration, including activating extensions.
            channel:manage:broadcast: Manage your channel's broadcast configuration, including updating channel configuration and managing stream markers and stream tags.
            user:edit:follows: Edit your follows.
            channel:manage:redemptions: Manage Channel Points custom rewards and their redemptions on a channel.
            channel:read:editors: View a list of users with the editor role for a channel.
            channel:manage:videos: Manage a channel's videos, including deleting videos.
            user:read:blocked_users: View the block list of a user.
            user:manage:blocked_users: Manage the block list of a user.
            user:read:subscriptions: Get the details of your subscription to a channel.
            user:read:follows: View the list of channels a user follows.
            channel:manage:polls: Manage a channel's polls.
            channel:manage:predictions: Manage of channel's Channel Points Predictions
            channel:read:polls: View a channel's polls.
            channel:read:predictions: View a channel's Channel Points Predictions.
            moderator:manage:automod: Manage messages held for review by AutoMod in channels where you are a moderator.
            channel:manage:schedule: Manage a channel's stream schedule.
            channel:read:goals: View Creator Goals for a channel.
        implicit:
          authorizationUrl: https://id.twitch.tv/oauth2/authorize
          scopes:
            analytics:read:extensions: View analytics data for your extensions.
            user:edit: Manage a user object.
            user:read:email: Read authorized user's email address.
            clips:edit: Create and edit clips as a specific user.
            bits:read: View bits information for your channel.
            analytics:read:games: View analytics data for your games.
            user:edit:broadcast: Edit your channel's broadcast configuration, including extension configuration. (This scope implies user:read:broadcast capability.)
            user:read:broadcast: View your broadcasting configuration, including extension configurations.
            chat:read: View live Stream Chat and Rooms messages.
            chat:edit: Send live Stream Chat and Rooms messages.
            channel:moderate: Perform moderation actions in a channel.
            channel:read:subscriptions: Get a list of all subscribers to your channel and check if a user is subscribed to your channel.
            whispers:read: View your whisper messages.
            whispers:edit: Send whisper messages.
            moderation:read: View your channel's moderation data including Moderators, Bans, Timeouts and Automod settings
            channel:read:redemptions: View your channel points custom reward redemptions
            channel:edit:commercial: Run commercials on a channel.
            channel:read:hype_train: View hype train data for a given channel.
            channel:read:stream_key: Read authorized user's stream key.
            channel:manage:extensions: Manage your channel's extension configuration, including activating extensions.
            channel:manage:broadcast: Manage your channel's broadcast configuration, including updating channel configuration and managing stream markers and stream tags.
            user:edit:follows: Edit your follows.
            channel:manage:redemptions: Manage Channel Points custom rewards and their redemptions on a channel.
            channel:read:editors: View a list of users with the editor role for a channel.
            channel:manage:videos: Manage a channel's videos, including deleting videos.
            user:read:blocked_users: View the block list of a user.
            user:manage:blocked_users: Manage the block list of a user.
            user:read:subscriptions: Get the details of your subscription to a channel.
            user:read:follows: View the list of channels a user follows.
            channel:manage:polls: Manage a channel's polls.
            channel:manage:predictions: Manage of channel's Channel Points Predictions
            channel:read:polls: View a channel's polls.
            channel:read:predictions: View a channel's Channel Points Predictions.
            moderator:manage:automod: Manage messages held for review by AutoMod in channels where you are a moderator.
            channel:manage:schedule: Manage a channel's stream schedule.
            channel:read:goals: View Creator Goals for a channel.

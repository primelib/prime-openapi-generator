openapi: 3.0.3
info:
  title: Twitch API - Helix
  description: |
    The new Twitch API provides the tools and data used to develop integrations with Twitch.
    The data models and systems are designed to provide relevant data in an easy, consistent, and reliable way.
  termsOfService: https://www.twitch.tv/p/de-de/legal/terms-of-service/
  license:
    name: MIT
    url: https://github.com/twitch4j/twitch4j/blob/master/LICENSE
  contact:
    name: Discord Community
    url: https://discord.gg/FQ5vgW3
  version: 1.0.0
externalDocs:
  description: Official Documentation
  url: https://dev.twitch.tv/docs/api/
servers:
  - url: https://api.twitch.tv/helix
tags:
  - name: analytics
    description: Analytics
  - name: bits
    description: Bits
  - name: channel_points
    description: Channel Points
  - name: chat
    description: Chat
  - name: entitlements
    description: Entitlements
  - name: eventsub
    description: Eventsub
  - name: extensions
    description: Extensions
  - name: search
    description: Search
  - name: channels
    description: channels
  - name: clips
    description: clips
  - name: hypetrain
    description: hypetrain
  - name: moderation
    description: moderation
  - name: polls
    description: polls
  - name: predictions
    description: predictions
  - name: schedule
    description: schedule
  - name: streams
    description: streams
  - name: tags
    description: tags
  - name: subscriptions
    description: subscriptions
  - name: teams
    description: teams
  - name: users
    description: users
  - name: videos
    description: videos
  - name: webhooks
    description: webhooks
  - name: games
    description: Game Endpoints
paths:
  /games:
    get:
      tags:
        - games
      summary: Gets game information by game ID or name.
      description: Use a user-token or app-token to increase rate limits.
      operationId: getGames
      externalDocs:
        description: Find more information on the Twitch Developer Documentation
        url: https://dev.twitch.tv/docs/api/reference#get-games
      parameters:
        - $ref: '#/components/parameters/tokenParam'
        - in: query
          name: id
          description: 'Game ID. At most 100 id values can be specified.'
          schema:
            type: array
            items:
              type: integer
            minItems: 0
            example:
              - 19999
          examples:
            oneId:
              summary: Example with a single game
              value: [5]
            multipleIds:
              summary: Example with multiple games
              value: [1, 5, 7]
        - in: query
          name: name
          description: 'Game name. The name must be an exact match. For instance, "Pokemon" will not return a list of Pokemon games; instead, query the specific Pokemon game(s) in which you are interested. At most 100 name values can be specified.'
          schema:
            type: array
            items:
              type: string
            minItems: 0
            example:
              - Overwatch
          examples:
            oneId:
              summary: Example with a single game
              value: ["Overwatch"]
            multipleIds:
              summary: Example with multiple games
              value: ["Overwatch", "CounterStrike: Global Offensive"]
      responses:
        '200':
          description: A list of users
          headers:
            RateLimit-Limit:
              schema:
                type: integer
              description: The rate at which points are added to your bucket. This is the average number of requests per minute you can make over an extended period of time.
            Ratelimit-Remaining:
              schema:
                type: integer
              description: The number of points you have left to use.
            Ratelimit-Reset:
              schema:
                type: integer
              description: A Unix epoch timestamp of when your bucket is reset to full.
          content:
            application/json:
              schema:
                title: GameList
                description: Holds Games returned based on the search parameters.
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Game'
        '401':
          description: Must provide a valid Client-ID or OAuth token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: "The request limit is across all New Twitch API endpoints. If this limit is exceeded, an error is returned: HTTP 429 (Too Many Requests)."
        '503':
          description: "If you get an HTTP 503 (Service Unavailable) error, retry once. If that retry also results in an HTTP 503, there probably is something wrong with the downstream service."
  /games/top:
    get:
      tags:
        - games
      summary: Gets games sorted by number of current viewers on Twitch, most popular first.
      operationId: getTopGames
      parameters:
        - $ref: '#/components/parameters/tokenParam'
        - $ref: '#/components/parameters/afterParam'
        - $ref: '#/components/parameters/beforeParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: A list of games
          content:
            application/json:
              schema:
                title: TopGameList
                description: Holds Games sorted by number of current viewers on Twitch, most popular first.
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Game'
                  pagination:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pagination'
        '401':
          description: "Must provide a valid Client-ID or OAuth token"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: "HTTP 429 (Too Many Requests). You have exceeded the request limit, please check your rate-limiting."
        '503':
          description: "If you get an HTTP 503 (Service Unavailable) error, retry once. If that retry also results in an HTTP 503, there probably is something wrong with the downstream service."
components:
  parameters:
    tokenParam:
      in: header
      name: Authorization
      required: true
      schema:
        type: string
      description: "User Auth Token"
    afterParam:
      in: query
      name: after
      required: false
      schema:
        type: string
      description: "Cursor for forward pagination: tells the server where to start fetching the next set of results, in a multi-page response. The cursor value specified here is from the pagination response field of a prior query."
    beforeParam:
      in: query
      name: before
      required: false
      schema:
        type: string
      description: "Cursor for backward pagination: tells the server where to start fetching the next set of results, in a multi-page response. The cursor value specified here is from the pagination response field of a prior query."
    limitParam:
      in: query
      name: first
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
      description: "Maximum number of objects to return. Maximum: 100. Default: 20."
  schemas:
    Game:
      description: Contains game information.
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 33214
        name:
          type: string
          example: Fortnite
        box_art_url:
          type: string
          example: https://static-cdn.jtvnw.net/ttv-boxart/Fortnite-{width}x{height}.jpg
    Pagination:
      description: The Twitch API supports cursor-based pagination for APIs that return lists of resources. This object holds the current curser.
      externalDocs:
        description: Find more information on the Twitch Developer Documentation
        url: https://dev.twitch.tv/docs/api/guide#pagination
      type: object
      properties:
        cursor:
          type: string
          example: eyJiIjpudWxsLCJhIjp7Ik9mZnNldCI6MjB9fQ==
    APIError:
      type: object
      properties:
        error:
          type: string
          example: Unauthorized
        status:
          type: integer
          example: 401
        message:
          type: string
          example: Must provide a valid Client-ID or OAuth token

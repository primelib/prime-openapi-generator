{# @pebvariable name="t" type="io.github.primelib.primecodegen.core.domain.template.NitroGeneratorData" #}
{# @pebvariable name="cfg" type="io.github.primelib.primecodegen.javafeign.config.JavaFeignGeneratorConfig" #}
{% include "./licenseInfo.peb" %}
package {{ t.apiPackage }};

{% include "./import.peb" with {"t": t, "imports": t.api.imports} %}

import java.util.function.Consumer;

{% for operation in t.api.operations %}
import {{ t.additionalProperties.get("specPackage") }}.{{ operation.nickname | capitalize }}OperationSpec;
{% endfor %}

{# Information #}
@Generated(value = "{{ t.generatorClass }}"{% if not cfg.hideGenerationTimestamp %}, date = "{{ t.generatorDate }}"{% endif %})
public class {{ t.mainClassName }}SpecApi {
    private final {{ t.mainClassName }}Api api;

    public {{ t.mainClassName }}SpecApi({{ t.mainClassName }}Api api) {
        this.api = api;
    }

{% for operation in t.api.operations %}
{# @pebvariable name="operation" type="org.openapitools.codegen.CodegenOperation" #}
    /**
{{ javadocDescription("     * ", operation.summary) }}
{% if operation.notes is not empty %}
     * <p>
{{ javadocDescription("     * ", operation.notes) }}
{% endif %}
{# Authentcation #}
{% if operation.vendorExtensions['x-required-scopes'] is not empty %}
     * Authentication - Required Scopes: {{ operation.vendorExtensions['x-required-scopes'] }}{{ newline() }}
{% endif %}
{# Params & ReturnType #}
     * @param {{ "spec" | padright(20) }} a consumer that takes a spec to prepare the request for execution
{# External Documentation #}
{% if operation.externalDocs is not empty %}
     * @see <a href="{{ operation.externalDocs.url }}">{{ operation.externalDocs.description }}</a>
{% endif %}
{# Deprecated #}
{% if operation.isDeprecated %}
     * @deprecated{% if operation.vendorExtensions.x_deprecated is not empty %} {{ operation.vendorExtensions.x_deprecated }}{% endif %}{{ newline() }}
{% endif %}
     */
{% if operation.isDeprecated %}
    @Deprecated
{% endif %}
    public {% if operation.returnType is not empty %}{{ operation.returnType | formatString(t.additionalProperties.getOrDefault("primeWrapReturnType", "%s"))  }}{% else %}void{% endif %} {{ operation.nickname }}(Consumer<{{ operation.nickname | capitalize }}OperationSpec> spec) {
        {{ operation.nickname | capitalize }}OperationSpec r = new {{ operation.nickname | capitalize }}OperationSpec(spec);
        {% if operation.returnType is not empty %}return {% endif %}api.{{ operation.nickname }}({% for param in operation.allParams %}{% if not param.vendorExtensions.getOrDefault("x-param-static", false) %}r.{{ param.paramName }}(){% if not loop.last %}, {% endif %}{% endif %}{% endfor %});
    }

{% endfor %}
}

openapi: 3.0.3
info:
  title: Twitch - Helix
  description: |
    The new Twitch API provides the tools and data used to develop integrations with Twitch.
    The data models and systems are designed to provide relevant data in an easy, consistent, and reliable way.
  termsOfService: https://www.twitch.tv/p/de-de/legal/terms-of-service/
  license:
    name: MIT
    url: https://github.com/twitch4j/twitch4j/blob/master/LICENSE
  contact:
    name: Discord Community
    url: https://discord.gg/FQ5vgW3
  version: 1.0.0
externalDocs:
  description: Official Documentation
  url: https://dev.twitch.tv/docs/api/
servers:
  - url: https://api.twitch.tv/helix
tags:
  - name: ads
    description: Advertisement
  - name: analytics
    description: Analytics
  - name: bits
    description: Bits
  - name: channel_points
    description: Channel Points
  - name: chat
    description: Chat
  - name: entitlements
    description: Entitlements
  - name: eventsub
    description: Eventsub
  - name: extensions
    description: Extensions
  - name: games
    description: Game Endpoints
  - name: search
    description: Search
  - name: channels
    description: channels
  - name: clips
    description: clips
  - name: hypetrain
    description: hypetrain
  - name: moderation
    description: moderation
  - name: polls
    description: polls
  - name: predictions
    description: predictions
  - name: schedule
    description: schedule
  - name: streams
    description: streams
  - name: tags
    description: tags
  - name: subscriptions
    description: subscriptions
  - name: teams
    description: teams
  - name: users
    description: users
  - name: videos
    description: videos
  - name: webhooks
    description: webhooks
paths:
  /channels/commercial:
    parameters:
      - $ref: '#/components/parameters/tokenParam'
    post:
      tags:
        - ads
      summary: Start Commercial
      description: Starts a commercial on a specified channel.
      operationId: startCommercial
      externalDocs:
        description: Find more information on the Twitch Developer Documentation
        url: https://dev.twitch.tv/docs/api/reference#start-commercial
      security:
        - twitch_oauth2: ['channel:edit:commercial']
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - broadcaster_id
                - length
              properties:
                broadcaster_id:
                  type: string
                  example: "41245072"
                length:
                  type: integer
                  example: 60
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: CommercialData
                description: Holds Information about the scheduled commercial.
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: CommercialDataTwo
                      description: Holds Information about the scheduled commercial.
                      type: object
                      properties:
                        length:
                          type: integer
                          description: Length of the triggered commercial
                          example: 60
                        message:
                          type: string
                          description: Provides contextual information on why the request failed
                          example: ""
                        retry_after:
                          type: integer
                          description: Seconds until the next commercial can be served on this channel
                          example: 480
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/ToManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /games:
    get:
      tags: [games]
      summary: Gets game information by game ID or name.
      description: Use a user-token or app-token to increase rate limits.
      operationId: getGames
      externalDocs:
        description: Find more information on the Twitch Developer Documentation
        url: https://dev.twitch.tv/docs/api/reference#get-games
      parameters:
        - $ref: '#/components/parameters/tokenParam'
        - in: query
          name: id
          description: 'Game ID. At most 100 id values can be specified.'
          schema:
            type: array
            items:
              type: integer
            minItems: 0
            example:
              - 19999
          examples:
            oneId:
              summary: Example with a single game
              value: [5]
            multipleIds:
              summary: Example with multiple games
              value: [1, 5, 7]
        - in: query
          name: name
          description: 'Game name. The name must be an exact match. For instance, "Pokemon" will not return a list of Pokemon games; instead, query the specific Pokemon game(s) in which you are interested. At most 100 name values can be specified.'
          schema:
            type: array
            items:
              type: string
            minItems: 0
            example:
              - Overwatch
          examples:
            oneId:
              summary: Example with a single game
              value: ["Overwatch"]
            multipleIds:
              summary: Example with multiple games
              value: ["Overwatch", "CounterStrike: Global Offensive"]
      responses:
        '200':
          description: A list of users
          headers:
            RateLimit-Limit:
              schema:
                type: integer
              description: The rate at which points are added to your bucket. This is the average number of requests per minute you can make over an extended period of time.
            Ratelimit-Remaining:
              schema:
                type: integer
              description: The number of points you have left to use.
            Ratelimit-Reset:
              schema:
                type: integer
              description: A Unix epoch timestamp of when your bucket is reset to full.
          content:
            application/json:
              schema:
                title: GameList
                description: Holds Games returned based on the search parameters.
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Game'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/ToManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /games/top:
    get:
      tags: [games]
      summary: Gets games sorted by number of current viewers on Twitch, most popular first.
      operationId: getTopGames
      parameters:
        - $ref: '#/components/parameters/tokenParam'
        - $ref: '#/components/parameters/afterParam'
        - $ref: '#/components/parameters/beforeParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: A list of games
          content:
            application/json:
              schema:
                title: TopGameList
                description: Holds Games sorted by number of current viewers on Twitch, most popular first.
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Game'
                  pagination:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/ToManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

# Components
components:
  # Request Parameters
  parameters:
    tokenParam:
      in: header
      name: Authorization
      required: true
      schema:
        type: string
      description: "User Auth Token"
    afterParam:
      in: query
      name: after
      required: false
      schema:
        type: string
      description: "Cursor for forward pagination: tells the server where to start fetching the next set of results, in a multi-page response. The cursor value specified here is from the pagination response field of a prior query."
    beforeParam:
      in: query
      name: before
      required: false
      schema:
        type: string
      description: "Cursor for backward pagination: tells the server where to start fetching the next set of results, in a multi-page response. The cursor value specified here is from the pagination response field of a prior query."
    limitParam:
      in: query
      name: first
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
      description: "Maximum number of objects to return. Maximum: 100. Default: 20."
  # Response Schemas
  schemas:
    Game:
      description: Contains game information.
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 33214
        name:
          type: string
          example: Fortnite
        box_art_url:
          type: string
          format: uri
          example: https://static-cdn.jtvnw.net/ttv-boxart/Fortnite-{width}x{height}.jpg
    Pagination:
      description: The Twitch API supports cursor-based pagination for APIs that return lists of resources. This object holds the current curser.
      externalDocs:
        description: Find more information on the Twitch Developer Documentation
        url: https://dev.twitch.tv/docs/api/guide#pagination
      type: object
      properties:
        cursor:
          type: string
          example: eyJiIjpudWxsLCJhIjp7Ik9mZnNldCI6MjB9fQ==
    APIError:
      type: object
      properties:
        error:
          type: string
          example: Unauthorized
        status:
          type: integer
          example: 401
        message:
          type: string
          example: Must provide a valid Client-ID or OAuth token

  # Resposnes
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError'
    ToManyRequests:
      description: "HTTP 429 (Too Many Requests). You have exceeded the request limit, please check your rate-limiting."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError'
    ServiceUnavailable:
      description: "If you get an HTTP 503 (Service Unavailable) error, retry once."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError'

  # Authentication
  securitySchemes:
    clientId:
      type: apiKey
      name: Client-Id
      in: header
      description: The ClientId of the Twitch App.
    twitch_oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://id.twitch.tv/oauth2/token
          scopes:
            analytics:read:extensions: View analytics data for your extensions.
            user:edit: Manage a user object.
            user:read:email: Read authorized user's email address.
            clips:edit: Create and edit clips as a specific user.
            bits:read: View bits information for your channel.
            analytics:read:games: View analytics data for your games.
            user:edit:broadcast: Edit your channel's broadcast configuration, including extension configuration. (This scope implies user:read:broadcast capability.)
            user:read:broadcast: View your broadcasting configuration, including extension configurations.
            chat:read: View live Stream Chat and Rooms messages.
            chat:edit: Send live Stream Chat and Rooms messages.
            channel:moderate: Perform moderation actions in a channel.
            channel:read:subscriptions: Get a list of all subscribers to your channel and check if a user is subscribed to your channel.
            whispers:read: View your whisper messages.
            whispers:edit: Send whisper messages.
            moderation:read: View your channel's moderation data including Moderators, Bans, Timeouts and Automod settings
            channel:read:redemptions: View your channel points custom reward redemptions
            channel:edit:commercial: Run commercials on a channel.
            channel:read:hype_train: View hype train data for a given channel.
            channel:read:stream_key: Read authorized user's stream key.
            channel:manage:extensions: Manage your channel's extension configuration, including activating extensions.
            channel:manage:broadcast: Manage your channel's broadcast configuration, including updating channel configuration and managing stream markers and stream tags.
            user:edit:follows: Edit your follows.
            channel:manage:redemptions: Manage Channel Points custom rewards and their redemptions on a channel.
            channel:read:editors: View a list of users with the editor role for a channel.
            channel:manage:videos: Manage a channel's videos, including deleting videos.
            user:read:blocked_users: View the block list of a user.
            user:manage:blocked_users: Manage the block list of a user.
            user:read:subscriptions: Get the details of your subscription to a channel.
            user:read:follows: View the list of channels a user follows.
            channel:manage:polls: Manage a channel's polls.
            channel:manage:predictions: Manage of channel's Channel Points Predictions
            channel:read:polls: View a channel's polls.
            channel:read:predictions: View a channel's Channel Points Predictions.
            moderator:manage:automod: Manage messages held for review by AutoMod in channels where you are a moderator.
            channel:manage:schedule: Manage a channel's stream schedule.
            channel:read:goals: View Creator Goals for a channel.
        authorizationCode:
          authorizationUrl: https://id.twitch.tv/oauth2/authorize
          tokenUrl: https://id.twitch.tv/oauth2/token
          scopes:
            analytics:read:extensions: View analytics data for your extensions.
            user:edit: Manage a user object.
            user:read:email: Read authorized user's email address.
            clips:edit: Create and edit clips as a specific user.
            bits:read: View bits information for your channel.
            analytics:read:games: View analytics data for your games.
            user:edit:broadcast: Edit your channel's broadcast configuration, including extension configuration. (This scope implies user:read:broadcast capability.)
            user:read:broadcast: View your broadcasting configuration, including extension configurations.
            chat:read: View live Stream Chat and Rooms messages.
            chat:edit: Send live Stream Chat and Rooms messages.
            channel:moderate: Perform moderation actions in a channel.
            channel:read:subscriptions: Get a list of all subscribers to your channel and check if a user is subscribed to your channel.
            whispers:read: View your whisper messages.
            whispers:edit: Send whisper messages.
            moderation:read: View your channel's moderation data including Moderators, Bans, Timeouts and Automod settings
            channel:read:redemptions: View your channel points custom reward redemptions
            channel:edit:commercial: Run commercials on a channel.
            channel:read:hype_train: View hype train data for a given channel.
            channel:read:stream_key: Read authorized user's stream key.
            channel:manage:extensions: Manage your channel's extension configuration, including activating extensions.
            channel:manage:broadcast: Manage your channel's broadcast configuration, including updating channel configuration and managing stream markers and stream tags.
            user:edit:follows: Edit your follows.
            channel:manage:redemptions: Manage Channel Points custom rewards and their redemptions on a channel.
            channel:read:editors: View a list of users with the editor role for a channel.
            channel:manage:videos: Manage a channel's videos, including deleting videos.
            user:read:blocked_users: View the block list of a user.
            user:manage:blocked_users: Manage the block list of a user.
            user:read:subscriptions: Get the details of your subscription to a channel.
            user:read:follows: View the list of channels a user follows.
            channel:manage:polls: Manage a channel's polls.
            channel:manage:predictions: Manage of channel's Channel Points Predictions
            channel:read:polls: View a channel's polls.
            channel:read:predictions: View a channel's Channel Points Predictions.
            moderator:manage:automod: Manage messages held for review by AutoMod in channels where you are a moderator.
            channel:manage:schedule: Manage a channel's stream schedule.
            channel:read:goals: View Creator Goals for a channel.
        implicit:
          authorizationUrl: https://id.twitch.tv/oauth2/authorize
          scopes:
            analytics:read:extensions: View analytics data for your extensions.
            user:edit: Manage a user object.
            user:read:email: Read authorized user's email address.
            clips:edit: Create and edit clips as a specific user.
            bits:read: View bits information for your channel.
            analytics:read:games: View analytics data for your games.
            user:edit:broadcast: Edit your channel's broadcast configuration, including extension configuration. (This scope implies user:read:broadcast capability.)
            user:read:broadcast: View your broadcasting configuration, including extension configurations.
            chat:read: View live Stream Chat and Rooms messages.
            chat:edit: Send live Stream Chat and Rooms messages.
            channel:moderate: Perform moderation actions in a channel.
            channel:read:subscriptions: Get a list of all subscribers to your channel and check if a user is subscribed to your channel.
            whispers:read: View your whisper messages.
            whispers:edit: Send whisper messages.
            moderation:read: View your channel's moderation data including Moderators, Bans, Timeouts and Automod settings
            channel:read:redemptions: View your channel points custom reward redemptions
            channel:edit:commercial: Run commercials on a channel.
            channel:read:hype_train: View hype train data for a given channel.
            channel:read:stream_key: Read authorized user's stream key.
            channel:manage:extensions: Manage your channel's extension configuration, including activating extensions.
            channel:manage:broadcast: Manage your channel's broadcast configuration, including updating channel configuration and managing stream markers and stream tags.
            user:edit:follows: Edit your follows.
            channel:manage:redemptions: Manage Channel Points custom rewards and their redemptions on a channel.
            channel:read:editors: View a list of users with the editor role for a channel.
            channel:manage:videos: Manage a channel's videos, including deleting videos.
            user:read:blocked_users: View the block list of a user.
            user:manage:blocked_users: Manage the block list of a user.
            user:read:subscriptions: Get the details of your subscription to a channel.
            user:read:follows: View the list of channels a user follows.
            channel:manage:polls: Manage a channel's polls.
            channel:manage:predictions: Manage of channel's Channel Points Predictions
            channel:read:polls: View a channel's polls.
            channel:read:predictions: View a channel's Channel Points Predictions.
            moderator:manage:automod: Manage messages held for review by AutoMod in channels where you are a moderator.
            channel:manage:schedule: Manage a channel's stream schedule.
            channel:read:goals: View Creator Goals for a channel.
